default:
    image: registry.gitlab.com/globalai/repo:latest

stages:
  - build
  - test

static analysis:
  stage: build
  before_script:
    - mkdir -p build
    - cd build
    - mkdir -p ccache
    - export CCACHE_DIR="$(pwd)/ccache"
    - ccache -M 500M
    - ccache -s
  script:
    - mkdir scan_results
    - scan-build -o scan_results cmake .. -DCMAKE_BUILD_TYPE=Release
    - scan-build -o scan_results make -j $nproc
    - ccache -s
    - ../script/run_tests.sh
  after_script:
    - ccache -s
  artifacts:
    paths:
      - build/scan_results
    expire_in: 1 week
  cache:
    key: master_key
    paths:
      - build/ccache
      - build/eigen_ext-prefix
      - build/googletest-prefix
      - build/fmt_ext-prefix
      - build/google_benchmark_ext-prefix

coverage:
  stage: test
  when: manual
  before_script:
    - mkdir -p build
    - cd build
    - mkdir -p ccache
    - export CCACHE_DIR="$(pwd)/ccache"
    - ccache -M 500M
    - ccache -s
  script:
    - ../script/run_coverage.sh
  after_script:
    - ccache -s
  artifacts:
    paths:
      - build/coverage
    expire_in: 1 week
  cache:
    key: master_key
    paths:
      - build/ccache
      - build/eigen_ext-prefix
      - build/googletest-prefix
      - build/fmt_ext-prefix
      - build/google_benchmark_ext-prefix

benchmarks:
  stage: test
  when: manual
  needs:
    - job: static analysis
      artifacts: true
  before_script:
    - mkdir -p build
    - cd build
    - mkdir -p ccache
    - export CCACHE_DIR="$(pwd)/ccache"
    - ccache -M 500M
    - ccache -s
  script:
    - cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_BENCHMARKS=ON
    - make -j $nproc
    - ./run_benchmarks
  after_script:
    - ccache -s
  artifacts:
    paths:
      - build/bench_results
  cache:
    key: master_key
    paths:
      - build/ccache
      - build/eigen_ext-prefix
      - build/googletest-prefix
      - build/fmt_ext-prefix
      - build/google_benchmark_ext-prefix
